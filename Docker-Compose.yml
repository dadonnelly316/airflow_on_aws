version: '3.7'

x-airflow-base: &airflow-base
  depends_on:
    postgres:
      condition: service_healthy
  build:
    dockerfile: debian.Dockerfile
  environment:
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:password@postgres:5432/postgres
    - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
    - RUN_DB_MIGRATION_BOOLEAN=1
    - CREATE_WEBSERVER_USER_BOOLEAN=1
    - AIRFLOW_WEBSERVER_EMAIL=localtesting@nonprod.com
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__WEBSERVER__BASE_URL=http://localhost:80
    - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=80
    - AIRFLOW__CLI__API_CLIENT=http://localhost:80
    - AIRFLOW_WEBSERVER_USERNAME=non-prod-testing
    - AIRFLOW_WEBSERVER_PASSWORD=youshallpass

services:
  postgres:
    image: postgres
    container_name: metadata_db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    volumes: 
      - host_machine_db:/var/lib/postgresql/data
      - ./build-dev-dependencies/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready" ,"-U", "postgres"]
      interval: 5s
      retries: 5

  airflow-webserver:
    <<: *airflow-base
    container_name: airflow-webserver
    build:
      dockerfile: debian.Dockerfile
    entrypoint: build/webserver_entrypoint.sh
    ports:
      - 80:80
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:80/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-base
    container_name: airflow-scheduler
    entrypoint: build/scheduler_entrypoint.sh
 
volumes: 
  host_machine_db:


  
